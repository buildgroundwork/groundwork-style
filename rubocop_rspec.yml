require: rubocop-rspec

AllCops:
  Include:
    - '**/*_spec.rb'

Capybara/MatchStyle:
  Enabled: true

Capybara/NegationMatcher:
  Enabled: true

Capybara/SpecificActions:
  Enabled: true

Capybara/SpecificFinders:
  Enabled: true

Capybara/SpecificMatcher:
  Enabled: true

RSpec:
  Language:
    Expectations:
      - will

RSpec/Be:
  Enabled: false

RSpec/BeEq:
  Enabled: true

RSpec/BeNil:
  Enabled: false

RSpec/ChangeByZero:
  Enabled: true

RSpec/ClassCheck:
  Enabled: true

RSpec/ContextWording:
  Prefixes:
    - when
    - with
    - without
    - if
    - unless
    - 'on'
    - which
    - that

RSpec/DescribeClass:
  Exclude:
    - spec/views/**/*

RSpec/DuplicatedMetadata:
  Enabled: true

RSpec/EmptyLineAfterExample:
  Enabled: false

RSpec/EmptyLineAfterFinalLet:
  Enabled: false

RSpec/EmptyLineAfterHook:
  Enabled: false

RSpec/EmptyLineAfterSubject:
  Enabled: false

# Be lenient on long examples that have large arrays, hashes, or heredocs
RSpec/ExampleLength:
  Max: 10
  CountAsOne:
    - array
    - hash
    - heredoc

# Auxiliary verbs are not to be feared.
RSpec/ExampleWording:
  Enabled: false

RSpec/ExcessiveDocstringSpacing:
  Enabled: true

RSpec/ExpectInHook:
  Enabled: false

RSpec/FactoryBot/ConsistentParenthesesStyle:
  Enabled: true

RSpec/FactoryBot/FactoryNameStyle:
  Enabled: true

# How to make your factory methods even harder to find.
RSpec/FactoryBot/SyntaxMethods:
  Enabled: false

RSpec/IdenticalEqualityAssertion:
  Enabled: true

RSpec/ImplicitBlockExpectation:
  Enabled: false

RSpec/ImplicitExpect:
  EnforcedStyle: should

RSpec/ImplicitSubject:
  EnforcedStyle: single_statement_only

RSpec/ItBehavesLike:
  EnforcedStyle: it_should_behave_like

RSpec/MultipleExpectations:
  Exclude:
    - spec/support/**/*

# We see no reason to artificially limit the number of calls to `let`.  In some
# case multiple `let` calls may make complete sense; we leave this up to the
# judgement of the implementer.
RSpec/MultipleMemoizedHelpers:
  Enabled: false

RSpec/NamedSubject:
  Enabled: false

RSpec/NestedGroups:
  Max: 10

RSpec/NoExpectationExample:
  Enabled: true

RSpec/PendingWithoutReason:
  Enabled: true

RSpec/Rails/AvoidSetupHook:
  Enabled: true

RSpec/Rails/HaveHttpStatus:
  Enabled: true

RSpec/Rails/InferredSpecType:
  Enabled: true

RSpec/Rails/MinitestAssertions:
  Enabled: true

RSpec/SortMetadata:
  Enabled: true

RSpec/StubbedMock:
  Enabled: true

RSpec/SubjectDeclaration:
  Enabled: true

RSpec/VerifiedDoubleReference:
  Enabled: true

RSpec/VerifiedDoubles:
  Enabled: false

